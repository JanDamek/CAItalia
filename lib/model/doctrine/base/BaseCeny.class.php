<?php

/**
 * BaseCeny
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property clob $popis
 * @property enum $kat
 * @property boolean $is_active
 * @property integer $min_den
 * @property string $sl1
 * @property clob $sl1p
 * @property string $sl2
 * @property clob $sl2p
 * @property string $sl3
 * @property clob $sl3p
 * @property string $sl4
 * @property clob $sl4p
 * @property string $sl5
 * @property clob $sl5p
 * @property string $sl6
 * @property clob $sl6p
 * @property string $sl7
 * @property clob $sl7p
 * @property string $sl8
 * @property clob $sl8p
 * @property string $sl9
 * @property clob $sl9p
 * @property Doctrine_Collection $CenyRadky
 * @property Doctrine_Collection $Zajezdy
 * 
 * @method string              getName()      Returns the current record's "name" value
 * @method clob                getPopis()     Returns the current record's "popis" value
 * @method enum                getKat()       Returns the current record's "kat" value
 * @method boolean             getIsActive()  Returns the current record's "is_active" value
 * @method integer             getMinDen()    Returns the current record's "min_den" value
 * @method string              getSl1()       Returns the current record's "sl1" value
 * @method clob                getSl1p()      Returns the current record's "sl1p" value
 * @method string              getSl2()       Returns the current record's "sl2" value
 * @method clob                getSl2p()      Returns the current record's "sl2p" value
 * @method string              getSl3()       Returns the current record's "sl3" value
 * @method clob                getSl3p()      Returns the current record's "sl3p" value
 * @method string              getSl4()       Returns the current record's "sl4" value
 * @method clob                getSl4p()      Returns the current record's "sl4p" value
 * @method string              getSl5()       Returns the current record's "sl5" value
 * @method clob                getSl5p()      Returns the current record's "sl5p" value
 * @method string              getSl6()       Returns the current record's "sl6" value
 * @method clob                getSl6p()      Returns the current record's "sl6p" value
 * @method string              getSl7()       Returns the current record's "sl7" value
 * @method clob                getSl7p()      Returns the current record's "sl7p" value
 * @method string              getSl8()       Returns the current record's "sl8" value
 * @method clob                getSl8p()      Returns the current record's "sl8p" value
 * @method string              getSl9()       Returns the current record's "sl9" value
 * @method clob                getSl9p()      Returns the current record's "sl9p" value
 * @method Doctrine_Collection getCenyRadky() Returns the current record's "CenyRadky" collection
 * @method Doctrine_Collection getZajezdy()   Returns the current record's "Zajezdy" collection
 * @method Ceny                setName()      Sets the current record's "name" value
 * @method Ceny                setPopis()     Sets the current record's "popis" value
 * @method Ceny                setKat()       Sets the current record's "kat" value
 * @method Ceny                setIsActive()  Sets the current record's "is_active" value
 * @method Ceny                setMinDen()    Sets the current record's "min_den" value
 * @method Ceny                setSl1()       Sets the current record's "sl1" value
 * @method Ceny                setSl1p()      Sets the current record's "sl1p" value
 * @method Ceny                setSl2()       Sets the current record's "sl2" value
 * @method Ceny                setSl2p()      Sets the current record's "sl2p" value
 * @method Ceny                setSl3()       Sets the current record's "sl3" value
 * @method Ceny                setSl3p()      Sets the current record's "sl3p" value
 * @method Ceny                setSl4()       Sets the current record's "sl4" value
 * @method Ceny                setSl4p()      Sets the current record's "sl4p" value
 * @method Ceny                setSl5()       Sets the current record's "sl5" value
 * @method Ceny                setSl5p()      Sets the current record's "sl5p" value
 * @method Ceny                setSl6()       Sets the current record's "sl6" value
 * @method Ceny                setSl6p()      Sets the current record's "sl6p" value
 * @method Ceny                setSl7()       Sets the current record's "sl7" value
 * @method Ceny                setSl7p()      Sets the current record's "sl7p" value
 * @method Ceny                setSl8()       Sets the current record's "sl8" value
 * @method Ceny                setSl8p()      Sets the current record's "sl8p" value
 * @method Ceny                setSl9()       Sets the current record's "sl9" value
 * @method Ceny                setSl9p()      Sets the current record's "sl9p" value
 * @method Ceny                setCenyRadky() Sets the current record's "CenyRadky" collection
 * @method Ceny                setZajezdy()   Sets the current record's "Zajezdy" collection
 * 
 * @package    caitalia
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCeny extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ceny');
        $this->hasColumn('name', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 100,
             ));
        $this->hasColumn('popis', 'clob', null, array(
             'type' => 'clob',
             'notnull' => false,
             ));
        $this->hasColumn('kat', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'Leto',
              1 => 'Zima',
              2 => 'Agroturistika',
             ),
             'default' => 'Leto',
             ));
        $this->hasColumn('is_active', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => true,
             ));
        $this->hasColumn('min_den', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('sl1', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('sl1p', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('sl2', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('sl2p', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('sl3', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('sl3p', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('sl4', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('sl4p', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('sl5', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('sl5p', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('sl6', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('sl6p', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('sl7', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('sl7p', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('sl8', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('sl8p', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('sl9', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('sl9p', 'clob', null, array(
             'type' => 'clob',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('CenyRadky', array(
             'local' => 'id',
             'foreign' => 'ceny_id'));

        $this->hasMany('Zajezdy', array(
             'local' => 'id',
             'foreign' => 'ceny_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'unique' => false,
             'fields' => 
             array(
              0 => 'name',
             ),
             'canUpdate' => true,
             ));
        $this->actAs($timestampable0);
        $this->actAs($sluggable0);
    }
}